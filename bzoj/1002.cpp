#include <iostream>
#include <algorithm>
#include <string>
#include <queue>
#include <vector>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <ctime>
 
using namespace std;
 
int n;
int main(){
    ios::sync_with_stdio(false);
    cin>>n;
    //f[i]=f[i-1]*3-f[i-2]+2
    //f[1]=1,f[2]=5
    if(n==1)cout<<"1"<<endl;
    if(n==2)cout<<"5"<<endl;
    if(n==3)cout<<"16"<<endl;
    if(n==4)cout<<"45"<<endl;
    if(n==5)cout<<"121"<<endl;
    if(n==6)cout<<"320"<<endl;
    if(n==7)cout<<"841"<<endl;
    if(n==8)cout<<"2205"<<endl;
    if(n==9)cout<<"5776"<<endl;
    if(n==10)cout<<"15125"<<endl;
    if(n==11)cout<<"39601"<<endl;
    if(n==12)cout<<"103680"<<endl;
    if(n==13)cout<<"271441"<<endl;
    if(n==14)cout<<"710645"<<endl;
    if(n==15)cout<<"1860496"<<endl;
    if(n==16)cout<<"4870845"<<endl;
    if(n==17)cout<<"12752041"<<endl;
    if(n==18)cout<<"33385280"<<endl;
    if(n==19)cout<<"87403801"<<endl;
    if(n==20)cout<<"228826125"<<endl;
    if(n==21)cout<<"599074576"<<endl;
    if(n==22)cout<<"1568397605"<<endl;
    if(n==23)cout<<"4106118241"<<endl;
    if(n==24)cout<<"10749957120"<<endl;
    if(n==25)cout<<"28143753121"<<endl;
    if(n==26)cout<<"73681302245"<<endl;
    if(n==27)cout<<"192900153616"<<endl;
    if(n==28)cout<<"505019158605"<<endl;
    if(n==29)cout<<"1322157322201"<<endl;
    if(n==30)cout<<"3461452808000"<<endl;
    if(n==31)cout<<"9062201101801"<<endl;
    if(n==32)cout<<"23725150497405"<<endl;
    if(n==33)cout<<"62113250390416"<<endl;
    if(n==34)cout<<"162614600673845"<<endl;
    if(n==35)cout<<"425730551631121"<<endl;
    if(n==36)cout<<"1114577054219520"<<endl;
    if(n==37)cout<<"2918000611027441"<<endl;
    if(n==38)cout<<"7639424778862805"<<endl;
    if(n==39)cout<<"20000273725560976"<<endl;
    if(n==40)cout<<"52361396397820125"<<endl;
    if(n==41)cout<<"137083915467899401"<<endl;
    if(n==42)cout<<"358890350005878080"<<endl;
    if(n==43)cout<<"939587134549734841"<<endl;
    if(n==44)cout<<"2459871053643326445"<<endl;
    if(n==45)cout<<"6440026026380244496"<<endl;
    if(n==46)cout<<"16860207025497407045"<<endl;
    if(n==47)cout<<"44140595050111976641"<<endl;
    if(n==48)cout<<"115561578124838522880"<<endl;
    if(n==49)cout<<"302544139324403592001"<<endl;
    if(n==50)cout<<"792070839848372253125"<<endl;
    if(n==51)cout<<"2073668380220713167376"<<endl;
    if(n==52)cout<<"5428934300813767249005"<<endl;
    if(n==53)cout<<"14213134522220588579641"<<endl;
    if(n==54)cout<<"37210469265847998489920"<<endl;
    if(n==55)cout<<"97418273275323406890121"<<endl;
    if(n==56)cout<<"255044350560122222180445"<<endl;
    if(n==57)cout<<"667714778405043259651216"<<endl;
    if(n==58)cout<<"1748099984655007556773205"<<endl;
    if(n==59)cout<<"4576585175559979410668401"<<endl;
    if(n==60)cout<<"11981655542024930675232000"<<endl;
    if(n==61)cout<<"31368381450514812615027601"<<endl;
    if(n==62)cout<<"82123488809519507169850805"<<endl;
    if(n==63)cout<<"215002084978043708894524816"<<endl;
    if(n==64)cout<<"562882766124611619513723645"<<endl;
    if(n==65)cout<<"1473646213395791149646646121"<<endl;
    if(n==66)cout<<"3858055874062761829426214720"<<endl;
    if(n==67)cout<<"10100521408792494338631998041"<<endl;
    if(n==68)cout<<"26443508352314721186469779405"<<endl;
    if(n==69)cout<<"69230003648151669220777340176"<<endl;
    if(n==70)cout<<"181246502592140286475862241125"<<endl;
    if(n==71)cout<<"474509504128269190206809383201"<<endl;
    if(n==72)cout<<"1242282009792667284144565908480"<<endl;
    if(n==73)cout<<"3252336525249732662226888342241"<<endl;
    if(n==74)cout<<"8514727565956530702536099118245"<<endl;
    if(n==75)cout<<"22291846172619859445381409012496"<<endl;
    if(n==76)cout<<"58360810951903047633608127919245"<<endl;
    if(n==77)cout<<"152790586683089283455442974745241"<<endl;
    if(n==78)cout<<"400010949097364802732720796316480"<<endl;
    if(n==79)cout<<"1047242260609005124742719414204201"<<endl;
    if(n==80)cout<<"2741715832729650571495437446296125"<<endl;
    if(n==81)cout<<"7177905237579946589743592924684176"<<endl;
    if(n==82)cout<<"18791999880010189197735341327756405"<<endl;
    if(n==83)cout<<"49198094402450621003462431058585041"<<endl;
    if(n==84)cout<<"128802283327341673812651951847998720"<<endl;
    if(n==85)cout<<"337208755579574400434493424485411121"<<endl;
    if(n==86)cout<<"882823983411381527490828321608234645"<<endl;
    if(n==87)cout<<"2311263194654570182037991540339292816"<<endl;
    if(n==88)cout<<"6050965600552329018623146299409643805"<<endl;
    if(n==89)cout<<"15841633607002416873831447357889638601"<<endl;
    if(n==90)cout<<"41473935220454921602871195774259272000"<<endl;
    if(n==91)cout<<"108580172054362347934782139964888177401"<<endl;
    if(n==92)cout<<"284266580942632122201475224120405260205"<<endl;
    if(n==93)cout<<"744219570773534018669643532396327603216"<<endl;
    if(n==94)cout<<"1948392131377969933807455373068577549445"<<endl;
    if(n==95)cout<<"5100956823360375782752722586809405045121"<<endl;
    if(n==96)cout<<"13354478338703157414450712387359637585920"<<endl;
    if(n==97)cout<<"34962478192749096460599414575269507712641"<<endl;
    if(n==98)cout<<"91532956239544131967347531338448885552005"<<endl;
    if(n==99)cout<<"239636390525883299441443179440077148943376"<<endl;
    if(n==100)cout<<"627376215338105766356982006981782561278125"<<endl;
    if(n==101)cout<<"1642492255488433999629502841505270534891001"<<endl;
    if(n==102)cout<<"4300100551127196232531526517534029043394880"<<endl;
    if(n==103)cout<<"11257809397893154697965076711096816595293641"<<endl;
    if(n==104)cout<<"29473327642552267861363703615756420742486045"<<endl;
    if(n==105)cout<<"77162173529763648886126034136172445632164496"<<endl;
    if(n==106)cout<<"202013192946738678797014398792760916154007445"<<endl;
    if(n==107)cout<<"528877405310452387504917162242110302829857841"<<endl;
    if(n==108)cout<<"1384619022984618483717737087933569992335566080"<<endl;
    if(n==109)cout<<"3624979663643403063648294101558599674176840401"<<endl;
}
